source('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(x = c(1,2,3,4,5,6))
cachemean(x = 1:10)
x <- matrix(data = 1:10, nrow=3, ncol=3)
x <- matrix(data = 1:12, nrow=4, ncol=3)
x
solve(x)
x <- matrix(data = 1:9, nrow=3, ncol=3)
x
solve(x)
x <- matrix(data = 9:18, nrow=3, ncol=3)
x <- matrix(data = 9:17, nrow=3, ncol=3)
c
x
solve(x)
?solve
solve(x)
x <- matrix(data = 1:9, nrow=3, ncol=3)
x
x[1,2] = 5
x
solve(x)
source('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x = x)
cacheSolve(x = x)
x
cacheSolve(x = x)
x$setmean(s)
x
y <-x
cacheSolve(x = y)
cacheSolve(x = y)
z <- cacheSolve(x = y)
z
makeCacheMatrix(x = z)
makeCacheMatrix$get
class(makeCacheMatrix)
class(x)
class(set)
class(s)
class(y)
makeCacheMatrix[,"get"]
x$get
cacheSolve(x = y)
cacheSolve(x = y)
cacheSolve(x = y)
View(x)
cacheSolve(x = y)
?message
message("Test")
cacheSolve(x = y)
cacheSolve(y)
debugSource('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
cacheSolve(y)
cacheSolve(y)
?matrix
debugSource('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
cacheSolve(y)
debugSource('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
cacheSolve(y)
debugSource('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
cacheSolve(y)
cacheSolve(y)
cacheSolve(y)
source('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
cacheSolve(y)
cacheSolve(x)
source('C:/Users/LKB/ProgrammingAssignment2/cachematrix.R')
z <- matrix(1:9, 3, 3)
z
z[1,4] = 18
z[1,4]
z[1,3]
z[1,3] <- 15
z
solve(z)
cacheSolve(z)
